name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: linux
          - os: windows-latest
            target: windows
          - os: macos-latest
            target: macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'

      - name: Install Make (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y make

      - name: Build binary
        run: make ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.target }}
          path: ./build

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        if: always()
        with:
          name: build-linux
          path: ./artifacts/linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        if: always()
        with:
          name: build-windows
          path: ./artifacts/windows

      - name: Download MacOS artifacts
        uses: actions/download-artifact@v3
        if: always()
        with:
          name: build-macos
          path: ./artifacts/macos

      - name: List Linux artifacts
        run: ls -l ./artifacts/linux

      - name: List Windows artifacts
        run: ls -l ./artifacts/windows

      - name: List MacOS artifacts
        run: ls -l ./artifacts/macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux/*
          asset_name: linux-tsh-${{ github.ref }}
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/*
          asset_name: windows-tsh-${{ github.ref }}
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos/*
          asset_name: macos-tsh-${{ github.ref }}
          asset_content_type: application/octet-stream
