name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # Set binary name based on OS
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=tsh-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          else
            BINARY_NAME=tsh-${{ matrix.goos }}-${{ matrix.goarch }}
          fi
          # Build the binary
          go build -v -o $BINARY_NAME

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: tsh-*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: false
